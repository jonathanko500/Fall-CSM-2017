<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/planet/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/planet/</description>

<item>
	<title>Doug Schaefer: EclipseCon Europe 2017 Quick Wrap Up</title>
	<guid isPermaLink="false">https://cdtdoug.ca/tag/eclipse/rss/59f48e5a63e10f05312469a9</guid>
	<link>https://cdtdoug.ca/eclipsecon-europe-2017-quick-wrap-up/</link>
	<description>&lt;div class=&quot;kg-card-markdown&quot;&gt;&lt;img alt=&quot;EclipseCon Europe 2017 Quick Wrap Up&quot; src=&quot;https://cdtdoug.ca/content/images/2017/10/20171023_174547.jpg&quot; /&gt;&lt;p&gt;My favorite EclipseCon of the many I've attended happened at one of the earliest ones. Of course there have been many good onces since, but this one was different because of the vibe that was happening. This was the 2005 edition at beautiful Hyatt Regency in Burlingame, California, our first in the &quot;Valley&quot;. It was a time when &lt;a href=&quot;https://www.eclipse.org/org/press-release/20050301eclipseconcommunity.htm&quot;&gt;companies were clamoring&lt;/a&gt; to be a part of the community. Borland was jumping head first to compete with IBM in the modeling space by joining as an Eclipse Strategic Member and that threw the IBM/Rational team into a tizzy as it had to learn how to work with a competitor in the open. It was so much fun to sit in the front row and watch the industry change in front of us in real time.&lt;/p&gt;
&lt;p&gt;EclipseCon Europe 2017 showed progress back towards that excitement. With a steady attendance of 600+, it really is the main event on the yearly calendar, at least for now. With all the activity recently around Java with Java EE moving to Eclipse and IBM finally releasing their J9 VM to the open, there's definitely a vibe in the air that brings back memories of those early EclipseCons. It will be very interesting to see how this evolves.&lt;/p&gt;
&lt;p&gt;Well, enough about Java :). It was a very good EclipseCon for Eclipse CDT project and tools for Embedded in general, probably the best since the glory days when we had our own CDT Summit events in the Montreal-Ottawa-Toronto corridor. As I put it to someone, &quot;CDT needs new blood and there's some blood on the doorstep, just need to get it inside.&quot; And I'm very excited to see some of the CDT contributors stepping up to help with some much needed revitalization of CDT's build system in the upcoming months. And with Jonah's work on the Debug Server Protocol and all the work going into the Language Server Protocol and the clangd language server, we're poised to bring CDT to a new generation that expect a more modern and lightweight experience.&lt;/p&gt;
&lt;p&gt;One final word for now, I have to reiterate what I said on Twitter and Facebook how incredibly honored I am to receive this year's Eclipse Lifetime Contribution Award. Those who know me well know I'm a very shy and introverted person. But there's always been something about the great people in the Eclipse community that brings me out of my shell. They make me feel a part of the family. For that I am and will be forever grateful.&lt;/p&gt;
&lt;p&gt;I've made so many friends along the way and I am immensely proud of what we as a community have built. I share this honor with everyone I've worked with and everyone whose helped me along the way, especially to QNX for giving me the responsibility to represent them in the community and to John Duimovich and CDT's first great leader Sebastien Marineau who made this crazy gamble to entrust me with the CDT project leadership :). All I can say is Thank You!&lt;/p&gt;
&lt;p&gt;Any way. I promised people at EclipseCon I'd write more. There's so much going on and my involvement and interest continues to grow as exciting new technologies are becoming mainstream (think embedded systems meets cloud meets artificial intelligence and all the runtime and tool needs in between). So much to write about. I can't wait to get into it.&lt;/p&gt;
&lt;/div&gt;</description>
	<pubDate>Sat, 28 Oct 2017 14:59:36 +0000</pubDate>
</item>
<item>
	<title>Karsten Thoms: EclipseCon Europe 2017 – Part 2</title>
	<guid isPermaLink="false">http://kthoms.wordpress.com/?p=902</guid>
	<link>https://kthoms.wordpress.com/2017/10/27/eclipsecon-europe-2017-part-2/</link>
	<description>&lt;p&gt;This time I really had to split up my look back to &lt;a href=&quot;https://www.eclipsecon.org/europe2017&quot;&gt;EclipseCon Europe&lt;/a&gt; into multiple posts. In my previous post I wrote my rememberings on ECE 2017 before it actually began. It was about my arrival and first meetings with the community, the &lt;a href=&quot;https://www.eclipsecon.org/europe2017/unconference&quot;&gt;Unconference&lt;/a&gt; on Monday and the reception and networking at the Nestor bar.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;image-uploaded-from-ios11.jpg&quot; class=&quot;alignnone size-full wp-image-951&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/image-uploaded-from-ios11-e1509132419546.jpg?w=584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;On Tuesday it was finally time to open the doors for EclipseCon Europe! It is already beginning at the reception and wardrobe where you meet lots of people and welcome them. Of course there is not much time then, but I was looking forward to find more time for chatting later.&lt;/p&gt;
&lt;h2&gt;Preparing for showtime&lt;/h2&gt;
&lt;p&gt;Tuesday morning is the tutorials slot. I would have liked to join Mickael Istria’s slot on the &lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/language-edition-support-eclipse-ide-best-breed-generic-editor-language-servers-and-textmate&quot;&gt;Language Server Protocol and Eclipse’s Generic Editor&lt;/a&gt;. This is definetely a topic where I will bring my experience in and will contribute to. Instead, I chose to prepare for my first talks on that day.&lt;/p&gt;
&lt;p&gt;All itemis colleagues met at our booth and we built it up together. The booth played a central role for us later and we wanted to make it an interesting place to be for attendees also. And hey – we had stickers this year again! I ordered them recently and improved my Gimp skills to make them free form cuts. The quality is good, and now we know where to order good ones.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;IMG_4663.jpg&quot; class=&quot;  wp-image-955 alignnone&quot; height=&quot;295&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/img_46631.jpg?w=393&amp;amp;h=295&quot; width=&quot;393&quot; /&gt;&lt;/p&gt;
&lt;p&gt;At noon it was time to meet up again. Not sure with whom I joined that day. I think it was Tuesday where I joined Lorenzo Bettini and Francesco and Vincenso from RCP Vision. Or already Monday? I have an information overload to get this correct in a row.&lt;/p&gt;
&lt;h2&gt;Keynotes&lt;/h2&gt;
&lt;p&gt;After lunch it was time for the &lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/welcoming-remarks-eclipse-state-union-theater&quot;&gt;opening keynote from Mike Milinkovich&lt;/a&gt;. But before that, Ludwigsburg’s mayor gave an insight on Ludwigsburg’s history. You may have read it, &lt;a href=&quot;http://www.focus.de/regional/baden-wuerttemberg/stadt-ludwigsburg-eclipsecon-europe-bleibt-in-ludwigsburg_id_7724435.html&quot;&gt;the Eclipse Foundation and Ludwigsburg agreed to keep EclipseCon Europe further for at least two years&lt;/a&gt; there. Good choice. The location is just perfect for this conference.&lt;/p&gt;
&lt;p&gt;Then it became time for Mike to welcome the audience and have an outlook on the future of Eclipse. These are exciting times, many projects are joining the Eclipse Foundation. With the &lt;a href=&quot;https://mmilinkov.wordpress.com/2017/09/12/java-ee-moves-to-the-eclipse-foundation/&quot;&gt;move of JavaEE to EE4J at Eclipse&lt;/a&gt;, not less than 40 new projects are pushing in, and &lt;a href=&quot;https://www.theregister.co.uk/2017/10/03/java_ee_goes_eclipse_now_what/&quot;&gt;GlassFish alone has 130 git repos&lt;/a&gt;. It will be a challenging task to spark this project. I don’t want to get into the details now, but &lt;a href=&quot;https://jaxenter.com/open-source-eclipse-openj9-137263.html&quot;&gt;OpenJ9&lt;/a&gt;, &lt;a href=&quot;https://t.co/3dx156Nfix&quot;&gt;Deeplearning4J&lt;/a&gt; are other awesome projects at the Foundation now. &lt;a href=&quot;https://science.eclipse.org/&quot;&gt;Eclipse Science&lt;/a&gt; is also getting things rolling and are &lt;a href=&quot;https://science.eclipse.org/content/eclipse-science-2017-simultaneous-release-here&quot;&gt;successful on their own release train&lt;/a&gt; now. The Eclipse IDE supports now Java 9 and JUnit 5 and has been added to Eclipse Oxygen.1a and Photon. The &lt;a href=&quot;https://www.eclipse.org/org/press-release/20170829eplv2.php&quot;&gt;Eclipse Public License 2.0 has been released this year&lt;/a&gt;, and JUnit 5 was the first project licensed under EPL-2.0.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;IMG_4665.jpg&quot; class=&quot;  wp-image-961 aligncenter&quot; height=&quot;328&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/img_4665.jpg?w=437&amp;amp;h=328&quot; width=&quot;437&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I have to admit that I was distracted during &lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/digitalization-%E2%80%93-good-bad-and-ugly-theater&quot;&gt;Anna Ståhlbröst’s keynote&lt;/a&gt; then. I partially followed and enjoyed how she presented live in Luleå, near to the polar circle in northern Sweden. The reason for distraction was that it was immediately after the keynote time for my next talk.&lt;/p&gt;
&lt;h2&gt;itemis Booth Talks&lt;/h2&gt;
&lt;p&gt;Now it was finally time for an idea that we had for our booth. The idea was to use our technical and presentation skills and give short talks at the booth. The short break between the keynotes and the afternoon talks was used by Lothar Wendehals, and he showed in just 5 minutes how to program an embedded system with our &lt;a href=&quot;https://www.itemis.com/en/yakindu/state-machine/&quot;&gt;YAKINDU Statechart Tools&lt;/a&gt;. And it took not more time until he programmed an Arduino to do something which he modeled as a finite state machine.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;screenshot 130&quot; class=&quot;alignnone size-full wp-image-968&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/screenshot-130.png?w=584&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Showtime!&lt;/h2&gt;
&lt;p&gt;In “&lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/introduction-expression-languages-xtext&quot;&gt;Introduction to Expression Languages with Xtext&lt;/a&gt;” I showed how to build languages in Xtext that embed expressions. There is Xbase, which can be easily consumed and implements a fully-fledged base expression language. So why not just use Xbase? There are reasons sometimes not to do so. Mostly because of three reasons: Performance, the need for another typesystem (Xbase is bound to the Java typesystem), or when no dependency on JDT is required.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;screenshot 21&quot; class=&quot;  wp-image-855 alignleft&quot; height=&quot;347&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/screenshot-21.png?w=462&amp;amp;h=347&quot; width=&quot;462&quot; /&gt;&lt;/p&gt;
&lt;p&gt;But you can learn a lot from the Xbase grammar. When you look at this grammar, it seems complex and makes much use of some more advanced Xtext grammar concepts like Syntactic Predicates or Assign Actions. Many Xtext users are not aware of that, or don’t understand them. So I explained them and where to use them, and I showed some patterns that any expression language follows in Xtext. The patterns are not that visible on first sight, but I gave another view on them.&lt;/p&gt;
&lt;p&gt;With a slight delay because of after-session discussion I joined Martin Lippert’s talk “&lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/implementing-language-servers-good-bad-ugly&quot;&gt;Implementing Language Servers – the Good, the Bad, the Ugly&lt;/a&gt;“. Martin did a great presentation about lessons learned from implementing and using multiple language &lt;img alt=&quot;IMG_4666&quot; class=&quot;  wp-image-973 alignleft&quot; height=&quot;373&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/img_4666.jpg?w=280&amp;amp;h=373&quot; width=&quot;280&quot; /&gt;servers, and the state of the LSP. If you are interested in LSP and missed it, look for the recorded session. I gave Martin later direct feedback on his good performance (as he always does).&lt;/p&gt;
&lt;p&gt;It was right before the first session when &lt;a href=&quot;https://jaxenter.de/author/dominik&quot;&gt;Dominik Mohilo from jaxenter.de&lt;/a&gt; showed up. He is continuously reporting interesting stuff in his online articles for years now, and helping Eclipse to get more intention in the developers’ minds in Germany. Thus I really value his work and was excited to finally meet him in person. Many thinks about Eclipse I read from him first, because they show up in my Facebook timeline and often I read those articles. He was even more excited to finally meet the drivers behind Eclipse in person. He wrote already a &lt;a href=&quot;https://jaxenter.de/eclipse-weekly-ee4j-openj9-eclipsecon-63515&quot;&gt;good wrap up about ECE 2017&lt;/a&gt; for his Eclipse Weekly newsletter (german).&lt;/p&gt;
&lt;h2&gt;News on Photon, GEF and the Jigsaw&lt;/h2&gt;
&lt;p&gt;I invited Dominik to join our next ignite talks. Now it was my time to present brand new stuff. I showed some of the &lt;a href=&quot;https://www.eclipse.org/eclipse/news/4.8/&quot;&gt;things that were added from Photon milestone 1 to 3&lt;/a&gt;, and even some of the things that are just about to come by my contributions. Besides some nice usability features and now fully working dark theme, I showed one of the most important things that users can await:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;screenshot 131&quot; class=&quot;alignnone size-full wp-image-980&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/screenshot-131.png?w=584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I am investigating from time to time where I think Eclipse could perform better and if I have ideas on that. Some additions that I am proud of are the “Expand All” action in the Search Views’s tree. I showed both Oxygen and Photon for a search result of ~5000 elements, and the improvement is at least factor 2. Also in this demo you could see another nice feature coming for macOS: The wait-cursor was an ugly black/white circle. I found a hidden gem in macOS to get an animated system cursor. Actually it is so hidden that you just hear rumors on this blue spinning ball on the net and almost find no pictures of it with a Google search. It is not documented, but I found a hint for it in a source file of macOS. I think it looks now much nicer.&lt;/p&gt;

&lt;a href=&quot;https://kthoms.wordpress.com/2017/10/27/eclipsecon-europe-2017-part-2/image-uploaded-from-ios5/&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;attachment-thumbnail size-thumbnail&quot; height=&quot;113&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/image-uploaded-from-ios5.jpg?w=150&amp;amp;h=113&quot; width=&quot;150&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://kthoms.wordpress.com/2017/10/27/eclipsecon-europe-2017-part-2/image-uploaded-from-ios6/&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;attachment-thumbnail size-thumbnail&quot; height=&quot;113&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/image-uploaded-from-ios6.jpg?w=150&amp;amp;h=113&quot; width=&quot;150&quot; /&gt;&lt;/a&gt;

&lt;p&gt;Also the improved speed of progress monitor updates I could show in difference between &lt;a href=&quot;https://www.youtube.com/watch?v=n64DdOa16yc&quot;&gt;Oxygen&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/watch?v=oJlrgTT2hdA&quot;&gt;Photon&lt;/a&gt;, which is just amazingly faster now. You will recognize this for example if you import projects from the Git Repository view. At the moment I am analyzing the performance of the (Java) text editor and have some patches pending. On my machine it feels already snappy again. I think the conference attendees around enjoyed my performance.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;screenshot 132&quot; class=&quot;alignnone size-full wp-image-982&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/screenshot-132.png?w=584&quot; /&gt;Next it was Alexander Nyßen to talk about “How we saved GEF from the Jigsaw”. To the luck of the GEF project they were one of the very early adopters of Java 9 and tested what implications Java 9 brought for GEF. They wanted of course to assure that GEF will be compatible to Java 9 once it is out, and found some issues. And they got in direct contact with the guys from Oracle to request some changes GEF and others would need. Users of GEF can be happy now, GEF works smoothly on Java 9!&lt;/p&gt;
&lt;h2&gt;My afternoon talk schedule&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&quot;IMG_4667&quot; class=&quot;  wp-image-985 alignleft&quot; height=&quot;356&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/img_4667.jpg?w=475&amp;amp;h=356&quot; width=&quot;475&quot; /&gt;The next session I attended was Andreas Graf’s presentation “&lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/large-scale-model-transformations-xtend&quot;&gt;Large Scale Model Transformations with Xtend&lt;/a&gt;“. As written in my previous post, model transformations are one of the main use cases for Xtend, but only known by a few people. Andreas is working in the automotive sector, where you usually have VERY large models, sometimes hundreds of megabytes in source. Transforming them is challenging, and they initially did an evaluation on different technologies (e.g. QVT-O). They finally decided to use Xtend. Some of the reasons were Xtend’s performance and debuggability. Did you ever tried to debug an interpreter on a large model? It’s horrible. With Xtend you can just debug the code and also down to its transpiled Java code. And they do not experience serious bugs with Xtend.&lt;/p&gt;
&lt;p&gt;I skipped one slot and went to our booth, where I joined some discussions with attendees and colleagues. Then it became time to listen to Olaf Gunkel’s talk “&lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/%E2%80%9C-future-async%E2%80%9D-or-java-concurrency-change-time&quot;&gt;the Future is async – or Java Concurrency in the change of time&lt;/a&gt;“. He explained concurrency programming from Java 1.0 to Java 9, and the different paradigms. I actually learned quite something about the newest stuff, reactive streams. Also Completable Future I do not use frequently – until yet.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;img_4668.jpg&quot; class=&quot;alignnone size-full wp-image-991&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/img_4668-e1509133746847.jpg?w=584&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Eclipse Stammtisch&lt;/h2&gt;
&lt;p&gt;That was the last talk for Tuesday and finally time to get beer at the Stammtisch, which took place in the theater’s foyer where our booth was. We made a small “flash mob”: All of us got the same T-Shirt, one with the funny bunny we had on our rollup at EclipseCon France. And suddenly it could be recognized how large the itemis crowd was. Around 20 persons from itemis, from which 8 were speakers with 12 talks.&lt;/p&gt;

&lt;a href=&quot;https://kthoms.wordpress.com/2017/10/27/eclipsecon-europe-2017-part-2/image-uploaded-from-ios3/&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;attachment-thumbnail size-thumbnail&quot; height=&quot;113&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/image-uploaded-from-ios3.jpg?w=150&amp;amp;h=113&quot; width=&quot;150&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://kthoms.wordpress.com/2017/10/27/eclipsecon-europe-2017-part-2/image-uploaded-from-ios4/&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;attachment-thumbnail size-thumbnail&quot; height=&quot;113&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/image-uploaded-from-ios4.jpg?w=150&amp;amp;h=113&quot; width=&quot;150&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://kthoms.wordpress.com/2017/10/27/eclipsecon-europe-2017-part-2/20171024_180134/&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;attachment-thumbnail size-thumbnail&quot; height=&quot;150&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/20171024_180134.jpg?w=113&amp;amp;h=150&quot; width=&quot;113&quot; /&gt;&lt;/a&gt;

&lt;p&gt;It must have been a nightmare for the EclipseCon’s program committee to choose from so many talks. Of course they will tend to provide a diverse program and don’t let single companies a too big focus. But that we were able to give 12 talks shows that they believed in the quality of our content and presentation. And no, we had no one from itemis at the program committee.&lt;/p&gt;
&lt;p&gt;I could not remember to whom I spoke at the reception all to, but one was different: I met Brian de Alwis, who made all the way from Canada to EclipseCon Europe. It was at EclipseConverge &amp;amp; DevoxxUS where I got to know him. We had the same &lt;a href=&quot;https://www.tripadvisor.de/Hotel_Review-g33020-d81625-Reviews-Pacific_Motor_Inn-San_Jose_California.html#photos;geo=33020&amp;amp;detail=81625&amp;amp;ff=257941736&amp;amp;albumViewMode=hero&amp;amp;aggregationId=101&amp;amp;albumid=101&amp;amp;baseMediaId=257941736&amp;amp;thumbnailMinWidth=50&amp;amp;cnt=30&amp;amp;offset=-4&amp;amp;filter=7&amp;amp;autoplay=&quot;&gt;shitty over-expensive hotel&lt;/a&gt; and met at breakfast. It was always refreshing to speak with him, a very nice guy. Actually it was him who partially sparked my interest to contribute to Eclipse Platform. The story behind would be worth another post.&lt;/p&gt;
&lt;h2&gt;The real conference&lt;/h2&gt;
&lt;p&gt;The party was of course not over when the last beer was served at the reception. It just begun. Of course it was again time to go over to Nestor, drink more beer and talk with all the Eclipse members that were joining there. At the bar there is happening the real conference. This is were you really have time to talk and learn to know new people. Year by year it gets more. At 1:30 AM I finally got to my room.&lt;/p&gt;
&lt;p&gt;Oh gosh, and this was just Tuesday! Wednesday would become even more intense, read about that in my next post. Our &lt;a href=&quot;http://bit.ly/2yNnIs9&quot;&gt;slides are available for download&lt;/a&gt; now.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/kthoms.wordpress.com/902/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/kthoms.wordpress.com/902/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=kthoms.wordpress.com&amp;amp;blog=6829080&amp;amp;post=902&amp;amp;subd=kthoms&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 27 Oct 2017 19:59:25 +0000</pubDate>
</item>
<item>
	<title>Karsten Thoms: EclipseCon Europe 2017 – Part 1</title>
	<guid isPermaLink="false">http://kthoms.wordpress.com/?p=866</guid>
	<link>https://kthoms.wordpress.com/2017/10/26/eclipsecon-europe-2017-part-1/</link>
	<description>&lt;p&gt;Without any doubt this year &lt;a href=&quot;https://www.eclipsecon.org/europe2017&quot;&gt;EclipseCon Europe&lt;/a&gt; was the most intense one for me. So intense that I have to split my look back into several parts. I met lots of community members again, and gained more new connections than in past events. The work in advance to this EclipseCon Europe were exhausting. I had as always work for customers to do, prepare my talks and then we also had the &lt;a href=&quot;https://blogs.itemis.com/en/eclipse-xtext-2.13-is-released&quot;&gt;release of Xtext 2.13&lt;/a&gt; right before EclipseCon. Of course this ment much work, but we from the Xtext team were able to ship the release right on time on October 20th. I was doubting that I could stay long in the evenings at Nestor bar for talking with those great people. I was proofed to be wrong.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;DM4hMLXX0AAJEuT.jpg_large.jpg&quot; class=&quot;alignnone size-full wp-image-891&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/dm4hmlxx0aajeut_large.jpg?w=584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I gave a preview to EclipseCon Europe in &lt;a href=&quot;https://kthoms.wordpress.com/2017/10/18/next-stop-eclipsecon-europe-2017/&quot;&gt;my previous post,&lt;/a&gt; and actually it quite matched what I experienced. But let’s start at the beginning.&lt;/p&gt;
&lt;p&gt;My travel started on sunday noon, since I wanted to meet with the Eclipse Scout community for a pre-conference dinner at the Rossknecht restaurant &amp;amp; brewery. I was traveling by train to use the time for working on my talks. I had 2 talks at the main conference, 1 for the unconference and 2 ignite talks for our booth. More on that later.&lt;/p&gt;
&lt;p&gt;I enjoyed meeting the Scout community members as always, especially with the project leads Matthias Zimmermann and Andreas Hoegger from BSI AG. Later that evening also the members from the Eclipse Foundation joined, and I was warmly welcomed by them.&lt;/p&gt;
&lt;p&gt;On Monday I was there for the Unconference and joined the track &lt;a href=&quot;https://www.eclipsecon.org/europe2017/schedule_item/guided-tour-eclipse-modeling&quot;&gt;Guided Tour on Eclipse Modeling&lt;/a&gt;, where a broad variation of overview talks were held on the various subprojects of the Eclipse Modeling Project. I especially enjoyed Ed Merk’s talk on the Eclipse Modeling Framework. Of course, everyone in the audience knew EMF, so Ed decided not to give a normal talk about it, but a Presentation Zen talk. For example, he explained us bug replication in EMF with a photo like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;ID-1003021.jpg&quot; class=&quot;alignnone  wp-image-869&quot; height=&quot;510&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/id-1003021.jpg?w=680&amp;amp;h=510&quot; width=&quot;680&quot; /&gt;&lt;br /&gt;
&lt;i&gt;Image courtesy of Christian Meyn at &lt;/i&gt;&lt;a href=&quot;http://freedigitalphotos.net/&quot;&gt;&lt;i&gt;FreeDigitalPhotos.net&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the afternoon I gave my first talk: An overview on the &lt;a href=&quot;http://xtend-lang.org/&quot;&gt;Xtend language&lt;/a&gt;, which I am maintaining and heavily use. Xtend is a full fledged programming language for the JVM, and makes Java development much sweeter.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;screenshot 90.png&quot; class=&quot;alignnone size-full wp-image-882&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/screenshot-90.png?w=584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Every programming language has its strengths, and to explain where Xtend has its strengths I took a look back on where Xtend came from: It goes back to the openArchitectureWare project and its successor Eclipse Xpand and the languages it provided. The Eclipse project Xpand is a template language and thus used for code generation. In Xtend this resulted in the famous &lt;a href=&quot;https://www.eclipse.org/xtend/documentation/203_xtend_expressions.html#templates&quot;&gt;Template Expressions&lt;/a&gt;. Another less known feature are Create Extensions, which are essential to write Model-to-Model Transformations. In his great talk “&lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/large-scale-model-transformations-xtend&quot;&gt;Using the Xtend language for M2M transformation&lt;/a&gt;” Andreas Graf showed this application of Xtend for large scale transformations of models from the automotive sector.&lt;/p&gt;
&lt;p&gt;After the Unconference I met the first colleagues at the Nestor bar for a beer. This was followed by a reception at the conference venue. More itemis colleagues joined and it was time to chat with some friends from the community. Especially I talked a bit more with Michael Keppler from ETAS, with whom I was also talking much during the conference.&lt;/p&gt;
&lt;p&gt;Of course the evening was not over after the reception. This was the time to meet again at the Nestor bar, the place to be after long conference days. First we had dinner with all itemis colleagues that were there then.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;DM4hdbBXcAAgPOb.jpg_large.jpg&quot; class=&quot;alignnone size-full wp-image-878&quot; src=&quot;https://kthoms.files.wordpress.com/2017/10/dm4hdbbxcaagpob_large.jpg?w=584&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1st line: Prajwal Gowda, Arshad Adavani, Bettina Zarnekow, me, Holger Schill&lt;/li&gt;
&lt;li&gt;2nd line: Hendrik Bünder, Alexander Nyßen, Darius Jockel, Olaf Gunkel, Christian Dietrich&lt;/li&gt;
&lt;li&gt;3rd line: Matthias Wienand, Marek Derdzinski, Michael Langhammer, Sebastian Zarnekow, Torsten Görk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A bit later also Patrik Suzzi, Platform UI committer and our new colleague at itemis Switzerland, arrived. I met Patrik at EclipseCon Toulouse this year and not long after he joined itemis. It was nice to see him again and talk about his current project at a well-known swiss bank.&lt;/p&gt;
&lt;p&gt;At the bar later I spoke with many, many people. I especially enjoiyed to talk with Mickael Istria, who acknowledged my contributions to Eclipse Platform and encouraged me to continue. What I certainly will do. It was also the time to thank Dani Megert and Stephan Herrmann, who helped us to avoid a desaster for Xtext with our JDT integration for Eclipse Oxygen.1a. Instead of a problem it turned to be a &lt;a href=&quot;https://blogs.itemis.com/en/about-the-power-of-open-source-development-at-eclipse&quot;&gt;success story about what it means to work together on professional open source projects at Eclipse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There were so many other people I spoke to at this evening: Mike Milinkovich, Ralph Müller, Angelika Wittek, Mickael Barbero, Torkild Resheim, Tom Schindl and many more. It was just awesome.&lt;/p&gt;
&lt;p&gt;And this was just until Monday, before the EclipseCon really started. On Monday I left the Nestor bar at 0:30 AM, we had to wake up early and I had to give my next talks on Tuesday. Time to get some sleep now.&lt;/p&gt;
&lt;p&gt;Tomorrow I hope to write the second part of my look back and will upload my presentations. You can get all slides from me and the numerous from my other collegues here: &lt;span class=&quot;js-display-url&quot;&gt;&lt;a href=&quot;http://bit.ly/2yNnIs9&quot;&gt;bit.ly/2yNnIs9&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/kthoms.wordpress.com/866/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/kthoms.wordpress.com/866/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=kthoms.wordpress.com&amp;amp;blog=6829080&amp;amp;post=866&amp;amp;subd=kthoms&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 26 Oct 2017 21:49:36 +0000</pubDate>
</item>
<item>
	<title>Andrey Loskutov: Clear sign it is too late</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-342159971341432126.post-1641285525321238860</guid>
	<link>http://javaclipse.blogspot.com/2017/10/clear-sign-it-is-too-late.html</link>
	<description>&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot;&gt;What is the clear sign that it is too late for you to hack on Java code?&lt;br /&gt;You get error messages like this from your favorite IDE:&lt;br /&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://4.bp.blogspot.com/-1xAWYtwX9CI/WfIxbXsQsRI/AAAAAAAAWVs/IoNFOnyneCsJMRmTxDoJzEFTk7otm0zoACLcBGAs/s1600/error_of_the_day.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img alt=&quot;Error of the day&quot; border=&quot;0&quot; height=&quot;424&quot; src=&quot;https://4.bp.blogspot.com/-1xAWYtwX9CI/WfIxbXsQsRI/AAAAAAAAWVs/IoNFOnyneCsJMRmTxDoJzEFTk7otm0zoACLcBGAs/s640/error_of_the_day.png&quot; title=&quot;Error of the day&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;This is not a joke.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 26 Oct 2017 19:07:59 +0000</pubDate>
	<author>noreply@blogger.com (Andrey Loskutov)</author>
</item>
<item>
	<title>Wayne Beaton: Running a Successful Open Source Project</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5396</guid>
	<link>https://waynebeaton.wordpress.com/2017/10/26/running-a-successful-open-source-project/</link>
	<description>&lt;p&gt;&lt;em&gt;This post is based on a talk that Gunnar Wagenknecht and I delivered at the Open Source Leadership Summit 2017 and Devoxx US 2017. This content was recently published in the &lt;a href=&quot;https://jaxenter.com/jax-magazine-eyes-open-source-138389.html&quot;&gt;All Eyes on Open Source&lt;/a&gt; issue of JAX Magazine.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Running a Succesful Open Source Project - Slides&quot; class=&quot;alignnone size-full wp-image-5403&quot; src=&quot;https://waynebeaton.files.wordpress.com/2017/10/running-a-succesful-open-source-project-slides.png?w=640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Running an open source project is easy. All you have to do is make your source code available and you’re open source, right? Well, maybe. Ultimately, whether or not an open source project is successful depends on your definition of success. Regardless of your definition, creating an open source project can be a lot of work. If you have goals regarding adoption, for example, then you need to be prepared to invest. While open source software is “free as in beer”, it’s not really free: time and energy are valuable resources and these valuable resources need to be invested in the project.&lt;/p&gt;
&lt;p&gt;So, how do you invest those resources?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Define success.&lt;/strong&gt; Before you can consider running a successful open source project, you need to have a clear definition of success. There are many factors to consider. Is it enough to just get some code into a publicly accessible repository or do you want more for your project? Is collaboration and adoption important to you? Are you just trying to build your reputation as as software developer? Does your definition of success long include long term viability? Do you want to grow a community around the project? Do you care about commercial adoption? Your answer to these questions can help you decide how many of the rest of our recommendations you’ll need to adopt.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Be transparent.&lt;/strong&gt; Transparency is pretty simple to understand: make it so that the community can watch and understand what you’re doing: use a publicly accessible source code repository that’s easy to find, use public facing issue tracking software, post your release plans where the community can find them, and capture meeting minutes in public forums (e.g. mailing lists with archives).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Be open.&lt;/strong&gt; For a lot of open source projects, “transparency” and “openness” mean the same thing, but the terms really are quite different. Being open is more than just being “open book” (which is essentially the same thing as transparency). For many, the “open” in open source means open to new ideas, or open to participation. The rules for participating in an open source project should be the same for everybody (“level playing field”): it’s not enough to just accept a few patches, you have to be open to new ideas. In short, you have to let others in and give up absolute control of the project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keep the “Playing Field Level”.  &lt;/strong&gt;This doesn’t necessarily mean that you have to let just anybody join the project, but rather that you ensure that the same set of rules apply to everybody (the playing field may be level, but you still have to earn your way onto the field). Meritocracy is about earning your way in.  Some projects implement meritocracy, for example, by requiring that developers make some number of contributions to demonstrate that they understand the code, rules, and culture of the project before inviting them to join the project team. Make sure that the process for adding new developers to your project are well known and that the process is operated transparently (e.g. a public vote).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Be vendor neutral.&lt;/strong&gt; In order to be truly open, people need to feel welcome to contribute. This is easier if the project is vendor neutral. A vendor neutral project is not dominated by any organization or organizations; meritocracy should be based on the contributions of an individual, not the goals or hiring practices of any specific organization. Hosting at vendor neutral foundation is one way to achieve this.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Have well defined and documented standards.&lt;/strong&gt; Be sure to document your project’s code formatting rules (make code formatter preferences easily accessible), expectations with regard to test coverage, development methodology, software and tools required, channels to connect with the project team, and other important information for potential contributors. Capture all of this information and make it as easy as possible to find. It’s a good practice to include a contribution guide in the root of your projects source code repositories (with DVCS, it’s entirely possible that potential contributors will find a copy of a copy of a copy of your repository; having the contribution guide in the repository will make it easy for potential contributors to find their way home).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ensure that the project code is always buildable.&lt;/strong&gt; Include build scripts and instructions with the project code. Make it as easy as possible to successfully build and test the project code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Connect with your user community.&lt;/strong&gt; The user community is that group of people who use the products of your open source project. The user community rarely contributes anything directly to the project code, but does tend to ask a lot of questions. Make sure that those questions get answered. A healthy user community feeds an adopter community.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Connect with your adopter community.&lt;/strong&gt; An obvious sign of success for an open source project is that other groups start to use your open source project in their own products, or build extensions. This community is more willing to give back to the project and will be the project’s best source of contributions. Some number of those contributors will be great candidates to join your project’s team. Development of an eco-system of adopters and extenders is a great way to ensure the longevity of your project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Connect with your development community.&lt;/strong&gt; The development community is comprised of your project’s team members and contributors. Provide well-known channels for communication within this community. Having clear lines of communication will help developers collaborate.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Have a plan.&lt;/strong&gt; It’s easy to lapse into a pattern of just letting software development happen, but like any process (especially a software development process), having  some method to the madness is critical. Make sure that your project employs a development methodology and make sure that somebody owns the process (e..g a project lead). Having a plan helps developers know where they can contribute the most value and makes it easier for adopters and extenders to implement their own plans (and thereby be successful). Treat your open source project like any other software development project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Manage your brand.&lt;/strong&gt; Your project will have a brand. The project’s name is its identity; as is the project logo, along with the names of any products (it’s typical that an the products of an open source project share the name of the project, but some projects produce more than one product). Claim the project’s brand as a trademark and consider registering that trademark. Establish trademark usage guidelines so that adopters know how to use your brand. This is an area where working with an open source software foundation can add value. A foundation can hold and defend the project’s trademarks on behalf of the community. This avoids letting any particular individual or organization hold the project’s name hostage (this happens).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Manage Intellectual property and copyright.&lt;/strong&gt; The code, documentation, and other artifacts contributed to the project is intellectual property. Who owns that intellectual property? Do the authors retain their ownership, or do they assign it to another entity? Make sure that the rights and responsibilities of contributors are understood by all contributors. Consider having contributors sign a developer certificate of origin (DCO) or a contributor license agreement (CLA). Ensure that copyright notices are included with the source code and in notices.&lt;/p&gt;
&lt;p&gt;Note that it is unlikely that the project itself is a legal entity that can hold copyrights. This is another way in which an open source foundation can provide a valuable service.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pick an OSI-approved open source license.&lt;/strong&gt; Don’t create your own custom license; that will just add legal hurdles for anybody who wants to use your code. Make sure that the license that you choose is compatible with the manner in which you intend for the code to be used. Further, ensure that the license is compatible with any third party content (e.g. libraries) that your project code needs. Include the SPDX code for your license in the headers for all source files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Move your project to an open source foundation.&lt;/strong&gt; We’ve mentioned foundations a few times already. A foundation can first and foremost help you to keep your project vendor neutral, which will help adoption: a bit part of the appeal of open source software is that adopters can avoid being beholden to a particular organization. A foundation can hold onto and defend the project’s trademarks, establish a governance model, help you manage your brand, provide intellectual property management services, and just generally provide assistance and advice for operating a successful open source project. Being a part of an open source foundation provides a value feedback loop. The foundation provides credibility for your open source project which in turn provides credibility to the foundation.&lt;/p&gt;
&lt;p&gt;Running an open source project is a lot of work. But, as we’ve suggested, how much work it takes really depends on your definition of success. Fall back on the core principles of open source development: transparency, openness, and meritocracy. Everything else comes from that.&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/waynebeaton.wordpress.com/5396/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/waynebeaton.wordpress.com/5396/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=waynebeaton.wordpress.com&amp;amp;blog=19425814&amp;amp;post=5396&amp;amp;subd=waynebeaton&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 26 Oct 2017 18:11:50 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2017: Thursday program</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/europe2017/news/3475 at https://www.eclipsecon.org/europe2017</guid>
	<link>https://www.eclipsecon.org/europe2017/news/thursday-program</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Thursday is the day we take in a few more talks and catch these events:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		09:00 Keynote: Software Heritage by Roberto di Cosmo&lt;/li&gt;
	&lt;li&gt;
		09:45 - 13:00 Last chance to visit the exhibits&lt;/li&gt;
	&lt;li&gt;
		14:30 - Closing Session&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/news/thursday-program&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/europe2017/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/37880363261_7d7d4829e0_z.jpg?itok=fQOxz902&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 25 Oct 2017 19:06:09 +0000</pubDate>
</item>
<item>
	<title>Andrey Loskutov: SpotBugs 3.1.0 released</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-342159971341432126.post-4765611121701167537</guid>
	<link>http://javaclipse.blogspot.com/2017/10/spotbugs-310-released.html</link>
	<description>&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot;&gt;&lt;b&gt;FindBugs is dead, long live SpotBugs!&lt;/b&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://spotbugs.github.io/images/logos/spotbugs_logo_300px.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://spotbugs.github.io/images/logos/spotbugs_logo_300px.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;I would like to introduce here &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;SpotBugs&lt;/a&gt;, a spiritual successor of &lt;a href=&quot;http://findbugs.sourceforge.net/&quot;&gt;FindBugs&lt;/a&gt;, crafted by the community.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;We've just released &lt;a href=&quot;https://github.com/spotbugs/spotbugs/releases/tag/3.1.0&quot;&gt;3.1.0 version&lt;/a&gt;!&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;One of the main drivers to release &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;SpotBugs&lt;/a&gt; now is to support Java 9, but there were also few other exciting changes, read the release notes: &lt;a href=&quot;https://github.com/spotbugs/spotbugs/blob/3.1.0/CHANGELOG.md&quot;&gt;https://github.com/spotbugs/spotbugs/blob/3.1.0/CHANGELOG.md. &lt;/a&gt;&lt;br /&gt;&lt;br /&gt;We also have a new &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;SpotBugs&lt;/a&gt; Eclipse plugin, here are the links to the update site: &lt;a href=&quot;https://spotbugs.github.io/eclipse/&quot;&gt;https://spotbugs.github.io/eclipse&lt;/a&gt; and &lt;a href=&quot;https://marketplace.eclipse.org/content/spotbugs-eclipse-plugin&quot;&gt;Eclipse marketplace entry&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;SpotBugs links&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;Home: &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;https://spotbugs.github.io&lt;/a&gt;&lt;br /&gt;Mailing list: &lt;a href=&quot;https://github.com/spotbugs/discuss/issues?q=&quot;&gt;https://github.com/spotbugs/discuss/issues?q=&lt;/a&gt;&lt;br /&gt;Bug tracker: &lt;a href=&quot;https://github.com/spotbugs/spotbugs/issues&quot;&gt;https://github.com/spotbugs/spotbugs/issues&lt;/a&gt;&lt;br /&gt;Git repository: &lt;a href=&quot;https://github.com/spotbugs/spotbugs&quot;&gt;https://github.com/spotbugs/spotbugs&lt;/a&gt;&lt;br /&gt;Manual: &lt;a href=&quot;http://spotbugs.readthedocs.io/en/stable/&quot;&gt;http://spotbugs.readthedocs.io/en/stable/&lt;/a&gt;&lt;br /&gt;Migration guide: &lt;a href=&quot;http://spotbugs.readthedocs.io/en/latest/migration.html&quot;&gt;http://spotbugs.readthedocs.io/en/latest/migration.html&lt;/a&gt;&lt;br /&gt;Eclipse plugin update site: &lt;a href=&quot;https://spotbugs.github.io/eclipse&quot;&gt;https://spotbugs.github.io/eclipse&lt;/a&gt;&lt;br /&gt;Eclipse plugin nightly builds: &lt;a href=&quot;https://spotbugs.github.io/eclipse-latest&quot;&gt;https://spotbugs.github.io/eclipse-latest&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;P.S.&lt;/b&gt;&lt;br /&gt;If you are curious about the history of &lt;a href=&quot;https://spotbugs.github.io/&quot;&gt;SpotBugs&lt;/a&gt; and why &lt;a href=&quot;http://findbugs.sourceforge.net/&quot;&gt;FindBugs&lt;/a&gt; isn't there anymore, please read through this mails:&lt;br /&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://mailman.cs.umd.edu/pipermail/findbugs-discuss/2016-November/004321.html&quot;&gt;https://mailman.cs.umd.edu/pipermail/findbugs-discuss/2016-November/004321.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://mailman.cs.umd.edu/pipermail/findbugs-discuss/2017-September/004383.html&quot;&gt;https://mailman.cs.umd.edu/pipermail/findbugs-discuss/2017-September/004383.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 25 Oct 2017 04:55:03 +0000</pubDate>
	<author>noreply@blogger.com (Andrey Loskutov)</author>
</item>
<item>
	<title>EclipseCon Europe 2017: Wednesday highights</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/europe2017/news/3261 at https://www.eclipsecon.org/europe2017</guid>
	<link>https://www.eclipsecon.org/europe2017/news/wednesday-highights</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Wednesday promises a rich program of talks and these special features - &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		09:00 - Keynote: Journey from Monolith to Modularized Application&lt;/li&gt;
	&lt;li&gt;
		10:30 - Project Quality Day&lt;/li&gt;
	&lt;li&gt;
		12:30 - IoT Playground&lt;/li&gt;
	&lt;li&gt;
		17:05 - Exhibitor's Reception - sponsored by IBM&lt;/li&gt;
	&lt;li&gt;
		20:00 - Club ECE with live rock by our friends from 'Cool Down' - sponsored by Salesforce&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/news/wednesday-highights&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/europe2017/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/OSGi%20train.png?itok=5xUMI_-D&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 24 Oct 2017 17:45:18 +0000</pubDate>
</item>
<item>
	<title>PapyrusUML: Papyrus Oxygen now with BPMN</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=1018</guid>
	<link>https://papyrusuml.wordpress.com/2017/10/24/papyrus-oxygen-now-with-bpmn/</link>
	<description>&lt;p&gt;If there are lots of news, it must be &lt;a href=&quot;https://www.eclipsecon.org/europe2017/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;EclipseCon Europe&lt;/a&gt;! (hint: it is!)&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;OMG BPMN&quot; class=&quot; alignleft&quot; src=&quot;https://i1.wp.com/www.omg.org/images/logos/BPMN-logo.svg&quot; width=&quot;60&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Today’s news is about my support for the OMG’s &lt;a href=&quot;http://www.omg.org/spec/BPMN/2.0/About-BPMN/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Business Process Model and Notation&lt;/a&gt;, or BPMN: It is now supported on my Oxygen version!&lt;/p&gt;
&lt;p&gt;Do you want me to help you model a business process? Then I invite you to try my updated Papyrus BPMN v0.9.1 feature (implementing BPMN 2.0) available in the &lt;a href=&quot;https://marketplace.eclipse.org/content/papyrus-bpmn&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Marketplace&lt;/a&gt;.&lt;/p&gt;
&lt;h6 style=&quot;text-align: right;&quot;&gt;&lt;em&gt;The BPMN logo is a trademark of the OMG&lt;/em&gt;&lt;/h6&gt;&lt;br /&gt;Filed under: &lt;a href=&quot;https://papyrusuml.wordpress.com/category/bpmn/&quot;&gt;BPMN&lt;/a&gt;, &lt;a href=&quot;https://papyrusuml.wordpress.com/category/uncategorized/&quot;&gt;Uncategorized&lt;/a&gt; Tagged: &lt;a href=&quot;https://papyrusuml.wordpress.com/tag/oxygen/&quot;&gt;Oxygen&lt;/a&gt;, &lt;a href=&quot;https://papyrusuml.wordpress.com/tag/release/&quot;&gt;release&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/papyrusuml.wordpress.com/1018/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/papyrusuml.wordpress.com/1018/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/godelicious/papyrusuml.wordpress.com/1018/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/delicious/papyrusuml.wordpress.com/1018/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gofacebook/papyrusuml.wordpress.com/1018/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/facebook/papyrusuml.wordpress.com/1018/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gotwitter/papyrusuml.wordpress.com/1018/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/twitter/papyrusuml.wordpress.com/1018/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gostumble/papyrusuml.wordpress.com/1018/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/stumble/papyrusuml.wordpress.com/1018/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/godigg/papyrusuml.wordpress.com/1018/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/digg/papyrusuml.wordpress.com/1018/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/goreddit/papyrusuml.wordpress.com/1018/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/reddit/papyrusuml.wordpress.com/1018/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=papyrusuml.wordpress.com&amp;amp;blog=72365150&amp;amp;post=1018&amp;amp;subd=papyrusuml&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 24 Oct 2017 12:59:51 +0000</pubDate>
</item>
<item>
	<title>Andy Clement: AspectJ 1.9.0.RC1 released</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-4252978514266184993.post-807719432491364603</guid>
	<link>http://andrewclement.blogspot.com/2017/10/aspectj-190rc1-released.html</link>
	<description>&lt;p&gt;The first release candidate of AspectJ 1.9 is out. This is the version to use if working on Java 9 - but it also works on Java 8 too. It includes a recent version of the Eclipse Java9 compiler (from JDT Core, commit #062ac5d7a6bf9).  It does support basic usage of Java 9 modules and attempts to make the various pieces of the AspectJ distribution play nicely in Java 9.  &lt;/p&gt;&lt;p&gt;The 1.9.0.RC1 release candidate is available from the following repository:  &lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;&amp;lt;repository&amp;gt;&lt;br /&gt;    &amp;lt;id&amp;gt;repo.spring.io&amp;lt;/id&amp;gt;&lt;br /&gt;    &amp;lt;name&amp;gt;SpringSource milestones&amp;lt;/name&amp;gt;&lt;br /&gt;    &amp;lt;url&amp;gt;http://repo.spring.io/milestone&amp;lt;/url&amp;gt;&lt;br /&gt;&amp;lt;/repository&amp;gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Automatic Modules&lt;/h3&gt;&lt;p&gt;The key jars in an AspectJ distribution have been given automatic module names.  The automatic module name is &lt;tt&gt;org.aspectj.runtime&lt;/tt&gt; for the &lt;tt&gt;aspectjrt&lt;/tt&gt; module:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;$ java --module-path &amp;lt;pathto&amp;gt;/lib/aspectjrt.jar --list-modules | grep aspectj&lt;br /&gt;&lt;br /&gt;org.aspectj.runtime file:///&amp;lt;pathto&amp;gt;/lib/aspectjrt.jar automatic&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And similarly &lt;tt&gt;org.aspectj.weaver&lt;/tt&gt; and &lt;tt&gt;org.aspectj.tools&lt;/tt&gt; for &lt;tt&gt;aspectjweaver&lt;/tt&gt; and &lt;tt&gt;aspectjtools&lt;/tt&gt; respectively:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&lt;br /&gt;$ java --module-path &amp;lt;pathto&amp;gt;/lib/aspectjweaver.jar --describe-module org.aspectj.weaver&lt;br /&gt;&lt;br /&gt;org.aspectj.weaver file:///&amp;lt;pathto&amp;gt;/lib/aspectjweaver.jar automatic&lt;br /&gt;requires java.base mandated&lt;br /&gt;contains aj.org.objectweb.asm&lt;br /&gt;contains aj.org.objectweb.asm.signature&lt;br /&gt;contains org.aspectj.apache.bcel&lt;br /&gt;contains org.aspectj.apache.bcel.classfile&lt;br /&gt;contains org.aspectj.apache.bcel.classfile.annotation&lt;br /&gt;contains org.aspectj.apache.bcel.generic&lt;br /&gt;contains org.aspectj.apache.bcel.util&lt;br /&gt;contains org.aspectj.asm&lt;br /&gt;contains org.aspectj.asm.internal&lt;br /&gt;...&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Building woven modules&lt;/h3&gt;&lt;p&gt;AspectJ understands module-info.java source files and building modules that include aspects. Here is an example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&lt;br /&gt;&lt;b&gt;module-info.java&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;module demo {&lt;br /&gt; exports pkg;&lt;br /&gt; requires org.aspectj.runtime;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;pkg/Demo.java&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;package pkg;&lt;br /&gt;&lt;br /&gt;public class Demo {&lt;br /&gt; public static void main(String[] argv) {&lt;br /&gt;  System.out.println(&quot;Demo running&quot;);&lt;br /&gt; }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;otherpkg/Azpect.java&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;package otherpkg;&lt;br /&gt;&lt;br /&gt;public aspect Azpect {&lt;br /&gt; before(): execution(* *(..)) &amp;amp;&amp;amp; !within(Azpect) {&lt;br /&gt;  System.out.println(&quot;Azpect running&quot;);&lt;br /&gt; }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;We can now build those into a module:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&lt;br /&gt;$ ajc -1.9 module-info.java otherpkg/Azpect.java pkg/Demo.java -outjar demo.jar&lt;br /&gt;&lt;br /&gt;...&lt;br /&gt;module-info.java:3 [error] org.aspectj.runtime cannot be resolved to a module&lt;br /&gt;...&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Wait, that failed!  Yes, &lt;tt&gt;aspectjrt.jar&lt;/tt&gt; (which includes the required &lt;tt&gt;org.aspectj.weaver&lt;/tt&gt; module) wasn't supplied. We need to pass it on the module-path:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&lt;br /&gt;$ ajc -1.9 --module-path &amp;lt;pathto&amp;gt;/aspectjrt.jar module-info.java otherpkg/Azpect.java &lt;br /&gt;    pkg/Demo.java -outjar demo.jar&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now we have a demo module we can run:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&lt;br /&gt;$ java --module-path &amp;lt;pathto&amp;gt;/aspectjrt.jar:demo.jar --module demo/pkg.Demo&lt;br /&gt;&lt;br /&gt;Azpect running&lt;br /&gt;Demo running&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;That's it!&lt;/p&gt;  &lt;h3&gt;Binary weaving with modules&lt;/h3&gt; &lt;p&gt;A module is really just a jar with a module-info descriptor. As such you can simply pass a module on the &lt;tt&gt;inpath&lt;/tt&gt;and binary weave it with other aspects.  Take the module we built above, let's weave into it again:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&lt;b&gt;extra/AnotherAzpect.java&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;package extra;&lt;br /&gt;&lt;br /&gt;public aspect AnotherAzpect {&lt;br /&gt; before(): execution(* *(..)) &amp;amp;&amp;amp; !within(*Azpect) {&lt;br /&gt;  System.out.println(&quot;AnotherAzpect running&quot;);&lt;br /&gt; }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code&gt;&lt;br /&gt;$ ajc -inpath demo.jar AnotherAzpect.java -outjar newdemo.jar&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Notice how there was no complaint here that the &lt;tt&gt;org.aspectj.runtime&lt;/tt&gt; module hadn't been passed in. That is because &lt;tt&gt;inpath&lt;/tt&gt;was being used which doesn't treat specified jars as modules (and so does not check dependencies). There is no &lt;tt&gt;module-inpath&lt;/tt&gt; right now.  &lt;/p&gt;&lt;p&gt;Because the new jar produced includes the compiled aspect, the module-info specification inside is still correct, so we can run it exactly as before:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ java --module-path &amp;lt;pathto&amp;gt;/aspectjrt.jar:newdemo.jar --module demo/pkg.Demo&lt;br /&gt;&lt;br /&gt;Azpect running&lt;br /&gt;AnotherAzpect running&lt;br /&gt;Demo running&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Faster Spring AOP&lt;/h3&gt;&lt;p&gt;This version also includes the Spring AOP enhancements made in AspectJ 1.8.12 - as covered &lt;a href=&quot;http://andrewclement.blogspot.ca/2017/10/aspectj-1812-faster-spring-aop.html&quot;&gt;here&lt;/a&gt;.  &lt;/p&gt;&lt;h3&gt;More to come...&lt;/h3&gt; &lt;ul&gt;&lt;li&gt;&lt;p&gt;Eclipse JDT Java 9 support is still being actively worked on and lots of fixes will be coming through over the next few months and included in AspectJ 1.9.X revisions.&lt;/p&gt; &lt;/li&gt;&lt;li&gt;&lt;p&gt;AspectJ does not currently modify &lt;tt&gt;module-info.java&lt;/tt&gt; files. An aspect from one module applying to code in another module clearly introduces a dependency between those two modules. There is no reason - other than time! - that this can't be done. (&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=526244&quot;&gt;Issue 526244&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt;&lt;li&gt;&lt;p&gt;Related to that AspectJ, on detection of aspects should be able to automatically introduce the &lt;tt&gt;requires org.aspectj.runtime&lt;/tt&gt; to the &lt;tt&gt;module-info&lt;/tt&gt;. (&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=526242&quot;&gt;Issue 526242&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt;&lt;li&gt;&lt;p&gt;Module aware variants of AspectJ paths: &lt;tt&gt;--module-inpath&lt;/tt&gt;, &lt;tt&gt;--module-aspectpath&lt;/tt&gt;. (&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=526243&quot;&gt;Issue 526243&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;There are probably other use cases to be considered too (and bugs no doubt!), feel free to raise all these in &lt;a href=&quot;https://bugs.eclipse.org/bugs/enter_bug.cgi?product=AspectJ&quot;&gt;Bugzilla&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Mon, 23 Oct 2017 22:26:40 +0000</pubDate>
	<author>noreply@blogger.com (Andy Clement)</author>
</item>
<item>
	<title>PapyrusUML: Building a Papyrus-RT powered Rover</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=969</guid>
	<link>https://papyrusuml.wordpress.com/2017/10/23/building-a-papyrus-rt-powered-rover/</link>
	<description>&lt;p&gt;I was happy to discover that Bluzio [?] posted, in the &lt;strong&gt;&lt;a href=&quot;https://xmleye.wordpress.com/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Robots y modelos&lt;/a&gt;&lt;/strong&gt; blog, very detailed instructions on how you can be:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://xmleye.wordpress.com/2017/10/17/running-uml-rt-models-on-a-raspberry-pi-based-rover/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Running UML-RT models on a Raspberry Pi-based rover&lt;br /&gt;
&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;group&quot; id=&quot;content&quot;&gt;
&lt;div class=&quot;post-580 post type-post status-publish format-standard hentry category-uncategorized&quot;&gt;
&lt;p&gt;And of course, this was done using my own tool implementing UML-RT: &lt;a href=&quot;https://www.eclipse.org/papyrus-rt/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Papyrus for Real Time&lt;/a&gt; (Also see &lt;a href=&quot;https://papyrusuml.wordpress.com/links/&quot;&gt;Links&lt;/a&gt; page)!&lt;/p&gt;
&lt;p&gt;This blog post contains a detailed example on how to use Papyrus-RT in robotic applications! It discuss everything from the hardware used (based on the &lt;a href=&quot;https://www.polarsys.org/projects/polarsys.rover&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;PolarSys Rover&lt;/a&gt;) to the software generated with Papyrus-RT.&lt;/p&gt;
&lt;p&gt;If you are into robots and open source software, you must &lt;a href=&quot;https://xmleye.wordpress.com/2017/10/17/running-uml-rt-models-on-a-raspberry-pi-based-rover/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;go and read that post&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;post-580 post type-post status-publish format-standard hentry category-uncategorized&quot;&gt;
&lt;p&gt;Bluzio, I hope you will read this blog and &lt;a href=&quot;https://papyrusuml.wordpress.com/contact-us/&quot;&gt;let me know who you are&lt;/a&gt; so you, and your university, can be publicly thanked for your work!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: Thank you to &lt;strong&gt;Antonio Garcia-Dominguez&lt;/strong&gt; from &lt;strong&gt;Aston University&lt;/strong&gt;‘s  School of Engineering &amp;amp; Applied Science for all this material!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;br /&gt;Filed under: &lt;a href=&quot;https://papyrusuml.wordpress.com/category/uncategorized/&quot;&gt;Uncategorized&lt;/a&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/papyrusuml.wordpress.com/969/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/papyrusuml.wordpress.com/969/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/godelicious/papyrusuml.wordpress.com/969/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/delicious/papyrusuml.wordpress.com/969/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gofacebook/papyrusuml.wordpress.com/969/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/facebook/papyrusuml.wordpress.com/969/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gotwitter/papyrusuml.wordpress.com/969/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/twitter/papyrusuml.wordpress.com/969/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gostumble/papyrusuml.wordpress.com/969/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/stumble/papyrusuml.wordpress.com/969/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/godigg/papyrusuml.wordpress.com/969/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/digg/papyrusuml.wordpress.com/969/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/goreddit/papyrusuml.wordpress.com/969/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/reddit/papyrusuml.wordpress.com/969/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=papyrusuml.wordpress.com&amp;amp;blog=72365150&amp;amp;post=969&amp;amp;subd=papyrusuml&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 23 Oct 2017 15:17:34 +0000</pubDate>
</item>
<item>
	<title>itemis: A Bird’s View on Language Servers</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/a-birds-view-on-language-servers</guid>
	<link>https://blogs.itemis.com/en/a-birds-view-on-language-servers</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;To write computer programs different programming languages are used, often multiple languages for one piece of software. While programs can be written with very basic text editor like NotePad or vi, normally dedicated programming tools are used that give developers a more integrated and guided way of editing code. IDEs (Integrated Development Environment) usually support several languages at once, or even can be extended to support more languages. Some IDEs are heavy weight desktop applications (e.g. &lt;a href=&quot;https://www.eclipse.org/home/index.php&quot;&gt;Eclipse IDE&lt;/a&gt;, &lt;a href=&quot;https://www.visualstudio.com&quot;&gt;Visual Studio&lt;/a&gt;, &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt;), others more light weight (e.g. &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;, &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime&lt;/a&gt;, &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;), or even web based (&lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che&lt;/a&gt;, &lt;a href=&quot;https://c9.io/&quot;&gt;Cloud9&lt;/a&gt;).&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;All these tools share a common problem: For each programming language they support it usually needs quite sophisticated integration into that tool to support rich editing features like syntax coloring, syntactic and semantic code analysis, error reporting, code proposals and many more. For each supported language, for each supported version of these languages, for each supported feature, for each tool! While in the past it was sufficient for these tools to specialize on a small subset of languages, e.g. dedicated tools for programming Java or C, or on a small subset of features like syntax coloring, it is nowadays expected from these tools to provide rich support for many languages and features.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The increasing speed of language evolution and creation of new languages makes this even worse. For most languages tool integration is hand crafted, and tool providers are struggling hard to support a broader set of languages. For domain specific languages often language development frameworks like &lt;a href=&quot;https://www.eclipse.org/Xtext/&quot;&gt;Xtext&lt;/a&gt; are used. They address this problem through a combination of generic framework services and code generation: The necessary glue code for all supported editing features is produced automatically. However, these frameworks support only subset of potential IDEs.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;img alt=&quot;man-working-on-laptop-language-servers.jpg&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Software%20Development/man-working-on-laptop.jpg?t=1508760439784&amp;amp;width=724&amp;amp;name=man-working-on-laptop.jpg&quot; style=&quot;width: 724px;&quot; title=&quot;man-working-on-laptop-language-servers.jpg&quot; width=&quot;724&quot; /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Language Servers to the rescue!&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In 2015 Microsoft started development of &lt;/span&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Visual Studio Code&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (short: VS Code), a modern open sourced light-weight IDE based on web technology. The core team is lead by &lt;a href=&quot;https://en.wikipedia.org/wiki/Erich_Gamma&quot;&gt;Erich Gamma&lt;/a&gt;, who was already one of the masterminds behind Eclipse IDE in the past and knew how to build scalable and extensible tool platforms. And they had again the same issue: How to integrate support for multiple languages?&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;But then they had a great idea: They defined not just an API implemented in the main language of VS Code, TypeScript, but a technology agnostic protocol based on &lt;/span&gt;&lt;a href=&quot;http://www.jsonrpc.org/specification&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;JSON RPC&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;. And they open sourced the protocol definition. This protocol is known as the &lt;/span&gt;&lt;a href=&quot;https://github.com/Microsoft/language-server-protocol&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Language Server Protocol&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (LSP).&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The protocol itself defines messages and structures that are exchanged between an editor (the client) and a “language smartness provider” (the language server). The information exchanged between those two parties is a common subset of interactions that code editors and languages usually do: open/save/close files, editing text, validating code, reporting errors or log messages, search for symbol references, follow references and many more.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;VS Code was of course the first programming tool that used this protocol for its own integration of TypeScript, C# and other languages, but the software development community discovered the value of such a protocol for both sides fast: tool developers could integrate any language that offers the server side of the protocol, and language developers could concentrate on designing and implementing their language without caring much on their integration into certain tools. And due to the technology agnostic nature of the protocol both sides could be implemented in any language of their choice without dealing with all the nastiness of integrating programs written in different languages.&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;A word on the term “server”&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;When people read “server” they often think that there is some kind of server process running on a remote machine, maybe even a cloud based service. When hearing “language server” this could lead to the misunderstanding that a language server could just run on any machine and clients just need to connect and talk to that through remote communication. This is often just not true.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;img alt=&quot;data-exchange-worldwide.jpg&quot; height=&quot;344&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Software%20Development/data-exchange-worldwide.jpg?t=1508760439784&amp;amp;width=724&amp;amp;height=344&amp;amp;name=data-exchange-worldwide.jpg&quot; width=&quot;724&quot; /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;A language server often runs on the same machine as the client, often but not necessary in a separate (child) process. Besides performance aspects that developers expect when editing code, the main reason is that client and server have to share the same file system and work on the same files. When client and server are running on different machine, they need to work on a distributed file system. Some solutions follow this approach, but for most implementations nowadays just think of a language server running on the same machine and thus working on the same files as the client.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The separation of a language server process from the editing tool has another great advantage: The tool can operate with far less resources and will be more responsive while still supporting multiple languages, while the language server’s resources can be scaled independently. Users will get a fast editing experience while all the heavy-lifting stuff is performed in a background process asynchronously.&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Write once – run anywhere!&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Although it was not the primary intention from Microsoft’s team initially, the open and modern approach of the protocol convinced many tool and language developers to work and support on this common protocol. That way it has nowadays evolved to a de-facto standard. Java in VS Code, C# in Eclipse, TypeScript in Atom – even domain specific languages (DSLs) can be supported in any editor now. All that it takes is to implement a single protocol! And a bit tool-specific glue code to integrate a language server into specific clients.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Even if this doesn't sound that difficult, there is still a lot to be done for the providers – IDE providers need to generify their editing facilities and offer pluggable extensions for their tools. While VS Code as first provider naturally supports all features, others have to implement this. &lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse as a major player has various initiatives for supporting the LSP: Since Eclipse is implemented in Java, a Java implementation of the protocol is required. The &lt;/span&gt;&lt;a href=&quot;https://github.com/eclipse/lsp4j&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;LSP4J&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; project provides a framework that can be used for both Java based client and server implementations. With &lt;/span&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.lsp4e&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;LSP4E&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; a common API is offered to integrate language servers through the Eclipse plug-in mechanism, and &lt;a href=&quot;https://developers.redhat.com/blog/2016/11/24/deliver-support-for-new-languages-in-eclipse-ide-faster-with-generic-editor-and-language-servers/&quot;&gt;the new Generic Editor&lt;/a&gt; interacts with language servers connected to the IDE. On the language provider side the &lt;a href=&quot;https://www.itemis.com/en/xtext/&quot;&gt;Xtext framework&lt;/a&gt; is implementing the protocol’s server side for textual domain specific languages, opening up the vast amount of Xtext based languages to completely new editing environments.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Other widely used editing environments like Emacs, Eclipse &lt;/span&gt;&lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, Sublime are working on or already have support for the protocol. However, IntelliJ IDEA as one of the most used IDEs currently does not have plans to support the protocol. A &lt;a href=&quot;https://youtrack.jetbrains.com/issue/IDEABKL-7409&quot;&gt;feature request was opened&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; but until today it does not seem that IntelliJ will work on that in the near future. While IntelliJ did a great job on attracting developers to use their IDEs, making it even more popular than Eclipse for Java and Web Development, it bares the risk that they miss jumping onto the express train where all the other cool guys are already on and celebrating parties. With the increasing speed of language evolvement they will have a hard way to keep up the speed, and will miss support of new languages. &lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This is a chance for a renaissance of Eclipse, and the Eclipse community is doing a great job on modernizing and stabilizing the core IDE. Other IDEs have the chance to get a bigger piece of the pizza, and developers are free to choose whatever tool and language they favor without tool lock-in.&lt;/span&gt;&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fa-birds-view-on-language-servers&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 23 Oct 2017 15:13:00 +0000</pubDate>
	<author>thoms@itemis.de (Karsten Thoms)</author>
</item>
<item>
	<title>EclipseCon Europe 2017: What's on Tuesday?</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/europe2017/news/3160 at https://www.eclipsecon.org/europe2017</guid>
	<link>https://www.eclipsecon.org/europe2017/news/whats-tuesday</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Unwinding from the Unconference at the Meet&amp;amp;Greet? Here's an update on What's on Tuesday. In addition to great talks tomorrow, we have:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		09:00 Tutorials - room change: EASE -&amp;gt; Silchersaal, e(fx) Eclipse -&amp;gt; Sem. 1-2&lt;/li&gt;
	&lt;li&gt;
		09:00 IoT Day&lt;/li&gt;
	&lt;li&gt;
		13:00 Keynote: Mike Milinkovich&lt;/li&gt;
	&lt;li&gt;
		13:30 Keynote: Digitalization – The Good, the Bad, and the Ugly by Anna Ståhlbröst&lt;/li&gt;
	&lt;li&gt;
		17:30 Stammtisch followed by the Kahoot! Game&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And, find or create your evening BoF at the BoF Board!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/news/whats-tuesday&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/europe2017/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/Anna.png?itok=71QGu6O4&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 23 Oct 2017 13:48:05 +0000</pubDate>
</item>
<item>
	<title>PapyrusUML: AMASS uses me for Systems Modeling!</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=953</guid>
	<link>https://papyrusuml.wordpress.com/2017/10/23/amass-uses-papyrus-for-cps/</link>
	<description>&lt;p&gt;Thanks to my Minion Sébastien for pointing this out:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.amass-ecsel.eu/content/system-modelling-amass-papyrus&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;System modelling in AMASS with Papyrus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you work with Cyber-Physical Systems (CPS) and do not know about AMASS, I invite you to have a look at their &lt;a href=&quot;http://amass-ecsel.eu/content/objectives&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;objectives&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is another great example of the strength of the Papyrus solution, especially when mixed with other Eclipse and PolarSys solutions!&lt;/p&gt;&lt;br /&gt;Filed under: &lt;a href=&quot;https://papyrusuml.wordpress.com/category/marte/&quot;&gt;MARTE&lt;/a&gt;, &lt;a href=&quot;https://papyrusuml.wordpress.com/category/news/&quot;&gt;News&lt;/a&gt;, &lt;a href=&quot;https://papyrusuml.wordpress.com/category/papyrus/&quot;&gt;Papyrus&lt;/a&gt;, &lt;a href=&quot;https://papyrusuml.wordpress.com/category/sysml/&quot;&gt;SysML&lt;/a&gt;, &lt;a href=&quot;https://papyrusuml.wordpress.com/category/uml/&quot;&gt;UML&lt;/a&gt; Tagged: &lt;a href=&quot;https://papyrusuml.wordpress.com/tag/industry/&quot;&gt;industry&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/papyrusuml.wordpress.com/953/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/papyrusuml.wordpress.com/953/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/godelicious/papyrusuml.wordpress.com/953/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/delicious/papyrusuml.wordpress.com/953/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gofacebook/papyrusuml.wordpress.com/953/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/facebook/papyrusuml.wordpress.com/953/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gotwitter/papyrusuml.wordpress.com/953/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/twitter/papyrusuml.wordpress.com/953/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/gostumble/papyrusuml.wordpress.com/953/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/stumble/papyrusuml.wordpress.com/953/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/godigg/papyrusuml.wordpress.com/953/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/digg/papyrusuml.wordpress.com/953/&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://feeds.wordpress.com/1.0/goreddit/papyrusuml.wordpress.com/953/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/reddit/papyrusuml.wordpress.com/953/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=papyrusuml.wordpress.com&amp;amp;blog=72365150&amp;amp;post=953&amp;amp;subd=papyrusuml&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 23 Oct 2017 11:53:39 +0000</pubDate>
</item>
<item>
	<title>itemis: A UML-agnostic Migration Approach: From UML to DSL</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/a-uml-agnostic-migration-approach-from-uml-to-dsl</guid>
	<link>https://blogs.itemis.com/en/a-uml-agnostic-migration-approach-from-uml-to-dsl</link>
	<description>&lt;p&gt;Over the last decade, open source frameworks for creating domain-specific language workbenches have improved significantly. Thereby, it has become easier to utilize model-driven software engineering based on domain-specific languages (DSL). However, many companies already adopted model-driven engineering at the beginning of the 21st century. &lt;/p&gt;  
&lt;p&gt;Typically, Unified Modeling Language (UML) models are the basis for these approaches. In most cases, these models are created and maintained with expensive proprietary tools such as Rational Software Architect or Enterprise Architect.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;IT-UML-Migration-DSL.jpg&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Software%20Development/IT-services.jpg?t=1508760439784&amp;amp;width=724&amp;amp;name=IT-services.jpg&quot; style=&quot;width: 724px;&quot; title=&quot;IT-UML-Migration-DSL.jpg&quot; width=&quot;724&quot; /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt;Obviously, companies willing to migrate from a UML-based to a DSL-based approach face many challenges. First, all concepts of the former approach need to be available in the domain-specific language. Second, the migration needs to be automated to handle a large number of existing UML models. Third, the migration approach must cope with inconsistencies between the models and the actual source code. Finally, the source code generated from the migrated DSL model has to be equivalent to the source code used as input for the migration.&lt;br /&gt; &lt;br /&gt;The following will elaborate on an automatic migration from UML-based to DSL-based model-driven software engineering performed under the precondition that all present concepts are available in the DSL approach. To handle inconsistencies between UML model and actual source code, the latter is the only migration input.  Also, the following will describe the test process to ensure that the newly generated source code is equivalent.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;Migration Approach: From UML to DSL&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;To illustrate the migration process the data layer of an application written in Java will be migrated to an instance of an Entity DSL. The language workbench for the Entity model was created using the &lt;a href=&quot;https://www.itemis.com/en/xtext/&quot;&gt;Xtext framework&lt;/a&gt;. Based on a grammar written in the Xtext-specific Extended Backus-Naur Format the editor, parser, and abstract syntax tree for the Entity DSL is generated.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Migrating-From-Source-Code-Java.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/UML2DSL/MigratingFromSourceCode.png?t=1508760439784&amp;amp;width=451&amp;amp;name=MigratingFromSourceCode.png&quot; style=&quot;display: block; margin-left: auto; margin-right: auto; width: 451px;&quot; title=&quot;Migrating-From-Source-Code-Java.png&quot; width=&quot;451&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;The figure above shows the process of migrating existing source code written in Java to a textual representation of an Entity DSL model. Since Java input and Entity DSL are both managed within the Eclipse IDE, the migration utilizes further Eclipse plugins. First, the Java sources of a project to be migrated are parsed by the Eclipse Java Tools.&lt;br /&gt;Based on the instantiated Java abstract syntax tree (AST) the &lt;em&gt;DSL Migrator&lt;/em&gt; creates elements of the Entity AST.  For every Java class extending the &lt;em&gt;DataObject&lt;/em&gt; interface, the &lt;em&gt;DSL Migrator&lt;/em&gt; creates a new instance of the Entity class. Moreover, for every field or operation in such a class, a new attribute or operation is created, respectively.&lt;br /&gt;In addition, to the AST elements shown in the simplified example, the &lt;span&gt;&lt;em&gt;DSL Migrator&lt;/em&gt;&lt;/span&gt; also creates more detailed artifacts such as data types, parameters or exceptions. Although the migration approach relies on the source code, this source code has to abide by a particular structure regarding available class files, implemented interfaces, etc. to be successful. &lt;br /&gt; &lt;br /&gt;After the Entity DSLs AST has been created, the &lt;em&gt;DSL Serializer&lt;/em&gt; serializes the content of the AST. The &lt;em&gt;DSL Serializer&lt;/em&gt; has been inferred from the Xtext-specific grammar and will create a text file accordingly. The whole migration process is integrated into the Eclipse IDE and can be triggered on the project level.&lt;br /&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;Testing the migration approach&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;After implementing the migration process, automated tests verified that the generated Java files are equivalent to the previous source code. The tests were implemented using the Xpect framework which is dedicated to testing Xtext domain-specific languages. Besides support for parser, formatting and proposal tests, Xpect also offers functions for setting up complete Eclipse workspaces.&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;img alt=&quot;migration-process-xpect&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/UML2DSL/TestMigrationApproach.png?t=1508760439784&amp;amp;width=498&amp;amp;name=TestMigrationApproach.png&quot; style=&quot;width: 498px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;migration-process-xpect&quot; width=&quot;498&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;The figure above shows the test process implemented using Xpect. In the setup phase of the test, Xpect creates an empty workspace and imports a predefined sample Java project. The first step of the actual test routine starts the migration process. In the next step, the generator turns the migrated Entity DSL model into Java code. &lt;br /&gt;Finally, the test verifies that the generated source code is equivalent to the code used as input for the migration.&lt;br /&gt; &lt;br /&gt;The test case described above is suitable for testing if from a known input to the migration process the expected output is generated. However, to test the migration approach thoroughly source code from existing software components should be used as input to the process.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;Scaling the Migration Approach&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;Although the migration process is fully automated, there are still some things to do. First, the migration process is based on reverse-engineering Java source code. Even if the source code abides by certain proprietary framework rules, there is still an unpredictable number of variants in which the source code might be implemented. Second, it must be verified that the code generated from the DSL is equivalent to the source code used as input for the migration.&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;migration-process&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/UML2DSL/ScaledTest.png?t=1508760439784&amp;amp;width=704&amp;amp;name=ScaledTest.png&quot; style=&quot;width: 704px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;migration-process&quot; width=&quot;704&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;In order to achieve those goals, a process was introduced to perform the migration automatically for each project on a daily basis. The figure above shows the extended process to run the migration test for multiple existing software components. The elements highlighted in green were changed in comparison to the process described in before. First, the workspace setup imports multiple software components. Second, an additional step in the process creates a detailed report on the migration. Finally, the process persists every migration report per component as a file.&lt;/p&gt; 
&lt;p&gt;Technically the migration is executed on a dedicated continuous integration environment, migrating the more than 600 software components. Depending on the software component size each migration takes between 20 seconds and several minutes. To efficiently migrate all software components, they are migrated in parallel doing 100 components per workspace. In this setup, the overall migration takes approximately 4 hours and is executed once a day. Thereby, effects of changes in the &lt;em&gt;DSL Migrator&lt;/em&gt; or the software components on the migration is reported on a daily basis. Further, the continuous test environment can be used in the future to test the impact of changing the DSL or the generators.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;Conclusion&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;The Eclipse ecosystem offers powerful tools to fully implement a UML to DSL migration. However, the UML-agnostic approach heavily depends on the source code abiding a particular structure. The migration process mainly benefits from the JDT parser and the &lt;em&gt;DSL Serializer&lt;/em&gt;. While those two handle parsing and serializing, the &lt;em&gt;DSL Migrator&lt;/em&gt; can completely focus on the model-to-model transformation on the meta-model level.&lt;br /&gt; &lt;br /&gt;Additionally, it has been shown that testing the approach with artificially created projects is an important first step of verification. However, to ensure that the migration is working, it must also be tested with existing software components. To summarize, the extended testing approach offers many benefits: first, the migration can be tested automatically for all existing software components. Second, the generated migration report is easily accessible and gives a quick overview of problems during the migration. Finally, the automated test environment can be used in the future to detect the impact of changing the DSL and its generators.&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fa-uml-agnostic-migration-approach-from-uml-to-dsl&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 23 Oct 2017 09:28:00 +0000</pubDate>
	<author>buender@itemis.de (Hendrik Bünder)</author>
</item>
<item>
	<title>Eclipse Announcements: EclipseCon + Ludwigsburg = Great Partners</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/-CwiYa7LmO0/eclipsecon-ludwigsburg-great-partners</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/-CwiYa7LmO0/eclipsecon-ludwigsburg-great-partners</link>
	<description>We are pleased to announce a strategic partnership between the Eclipse Foundation Europe and the City of Ludwigsburg that keeps EclipseCon Europe at the Forum am Schlosspark through 2019.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/-CwiYa7LmO0&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sun, 22 Oct 2017 13:00:00 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2017: Welcome Smart Home Day participants!</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/europe2017/news/3159 at https://www.eclipsecon.org/europe2017</guid>
	<link>https://www.eclipsecon.org/europe2017/news/welcome-smart-home-day-participants</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;It was a sellout! Thanks to QIVICON and openHAB for sponsoring and organizing a great event.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/news/welcome-smart-home-day-participants&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/europe2017/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/SH_sign.jpg?itok=ghrKnw8J&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Sun, 22 Oct 2017 12:11:24 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2017: EclipseCon + Ludwigsburg = Great Partners</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/europe2017/news/3158 at https://www.eclipsecon.org/europe2017</guid>
	<link>https://www.eclipsecon.org/europe2017/news/eclipsecon-ludwigsburg-great-partners</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt; We are pleased to announce a strategic partnership between the Eclipse Foundation Europe and the City of Ludwigsburg that keeps EclipseCon Europe at the Forum am Schlosspark through 2019.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/news/eclipsecon-ludwigsburg-great-partners&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/europe2017/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/ralph_esther.jpg?itok=YSa-X-6L&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Sun, 22 Oct 2017 08:00:35 +0000</pubDate>
</item>
<item>
	<title>itemis: Domain-specific visualization of textual models with Xtext and Sirius</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/domain-specific-visualization-of-textual-models-with-xtext-and-sirius</guid>
	<link>https://blogs.itemis.com/en/domain-specific-visualization-of-textual-models-with-xtext-and-sirius</link>
	<description>&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Some people say graphical modeling is dead and textual modeling is the better maybe the only way. As an Xtext-enthusiast I would always argue that modeling should be done textually. &lt;/span&gt;&lt;/p&gt;  
&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;The obvious advantages are that text is easy to create, edit, merge and share. Textual modeling becomes especially powerful if a sophisticated editor with syntax highlighting, code completion, error markers, and formatting is available. &lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Yet, when it comes to discussing models with colleagues a graphical representation is more efficient. By only visualizing specific aspects of a model for a specific user group, all distracting parts are removed. In contrast to this ideal solution of graphical modeling, reality shows that graphical representation is &lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;often boiled down to user-independent class diagrams full of nasty details.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;The following will show how &lt;a href=&quot;https://www.itemis.com/en/xtext/&quot;&gt;Xtext&lt;/a&gt; and Sirius can be combined in order to quickly create a domain-specific graphical representation of DSL models. The slightly enhanced Xtext &lt;span&gt;&lt;a href=&quot;https://www.eclipse.org/Xtext/documentation/102_domainmodelwalkthrough.html&quot;&gt;domain model sample&lt;/a&gt;&lt;/span&gt; is used as the basis for the examples. &lt;a href=&quot;https://github.com/HBuender/XtextAndSiriusIntegration&quot;&gt;The source code of the samples is available on GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;img alt=&quot;interface_netzwerk.jpg&quot; height=&quot;344&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Software%20Development/interface_netzwerk.jpg?t=1508760439784&amp;amp;width=724&amp;amp;height=344&amp;amp;name=interface_netzwerk.jpg&quot; width=&quot;724&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;First, the concept of conditional styles that can be applied to class diagrams will be exemplified. Afterwards, we introduce a tabular representation of one part of the DSL model. Finally, we use custom shapes as an additional tool to create domain-specific diagrams in the context of domain-driven design.&lt;br /&gt; &lt;br /&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;Conditional Styles: Example and Representation&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;The domain-specific language allows to references between different models that are stored in different resources (files). The sample project uses different resources to separate entities within the company (company.dmodel) from entities outside the company (partner.dmodel). In order to visualize, which elements belong to the model in focus, it can be reasonable to highlight diagram elements that are not from the model in focus.&lt;br /&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;&lt;br /&gt;Simple Graphical Representation&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;In many cases, the information mentioned above is not part of the diagram, because it focusses on showing an element with all its referenced elements.&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;graphical-represantion-model-class-diagram&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/XtextAndSirius/conditional_simple_graphic.png?t=1508760439784&amp;amp;width=593&amp;amp;name=conditional_simple_graphic.png&quot; style=&quot;display: block; margin-left: auto; margin-right: auto; width: 593px;&quot; title=&quot;graphical-represantion-model-class-diagram&quot; width=&quot;593&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;The figure shows a simple class diagram that contains four classes, namely Product, ProductPart, UserManual, and Supplier. Just by reading the different term it might become clear which of the four elements is part of the entity.dmodel and which is part of the partner.dmodel. However, it would be much easier if classes from other resources are highlighted graphically. Thereby, many information becomes &quot;visible&quot; on the first sight, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Are there elements from other models?&lt;/li&gt; 
 &lt;li&gt;How many elements are there?&lt;/li&gt; 
 &lt;li&gt;What is the ratio between &quot;own&quot; and &quot;foreign&quot; classes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;&lt;br /&gt;Domain-specific Representation&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;To answer the questions mentioned above, Conditional Styles can be used. The enhancements are twofold: first, the design file was enhanced with &quot;Style Customizations&quot;. Second, a small function to determine if an element is part of the model currently in focus was implemented.&lt;br /&gt;&lt;br /&gt; &lt;br /&gt; &lt;img alt=&quot;sirius-design-file&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/XtextAndSirius/conditional_design_enhancement.png?t=1508760439784&amp;amp;width=491&amp;amp;name=conditional_design_enhancement.png&quot; style=&quot;width: 491px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;sirius-design-file&quot; width=&quot;491&quot; /&gt;&lt;br /&gt;&lt;br /&gt;The figure above shows the enhancement in the Sirius Design file. We introduced a style customization that holds a predicate expression that determines if the style customization should be applied to a diagram element. The predicate expression references a java service implemented using &lt;a href=&quot;https://www.eclipse.org/xtend/&quot;&gt;Xtend&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;pre class=&quot;prettyprint&quot;&gt;def isFromDifferentResource(EObject it, EObject view) {&lt;br /&gt; view.getContainerOfType(DSemanticDiagram).target != getContainerOfType(DomainModel)&lt;br /&gt; }&lt;/pre&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;As shown in the figure above the function &quot;isFromDifferentResource&quot; takes two arguments. The first is the EObject which representation might be enhanced by the style customization. The second is the current view element that is the representation of the EObject. The function checks if the target of the DSemanticDiagram is the same as the DomainModel of the given EObject. If they are not equal, the current element is from another model and should be custom styled.&lt;br /&gt;&lt;br /&gt; &lt;br /&gt; &lt;img alt=&quot;style-customization-graphical-model&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/XtextAndSirius/conditional_ds_graphic.png?t=1508760439784&amp;amp;width=616&amp;amp;name=conditional_ds_graphic.png&quot; style=&quot;display: block; margin-left: auto; margin-right: auto; width: 616px;&quot; title=&quot;style-customization-graphical-model&quot; width=&quot;616&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;The figure above shows how a style customization looks, when it is applied. The supplier element is painted in grey since it is from another model. With this simple enhancement to the diagrams all the questions mentioned above can be answered on the first sight and the diagram becomes much more expressive.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;Tabular Definition: Example and Representation&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;For the second example the domain model has been enhanced by two parser rules, namely &lt;em&gt;Enumeration&lt;/em&gt; and &lt;em&gt;EnumerationLiteral&lt;/em&gt;. &lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;pre class=&quot;prettyprint&quot;&gt;Enumeration:&lt;br /&gt; 'enum' name=ID&lt;br /&gt; '{'&lt;br /&gt; literals+=EnumerationLiteral+&lt;br /&gt; '}'&lt;br /&gt;;&lt;br /&gt;&lt;br /&gt;EnumerationLiteral:&lt;br /&gt; 'literal' name=ID 'text' text=STRING 'code' code=STRING ('{' literals+=EnumerationLiteral+ '}')?&lt;br /&gt;;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br /&gt;Enumerations are comparable to Java enums. Each Enumeration holds a list of &lt;em&gt;EnumerationLiterals&lt;/em&gt;. &lt;em&gt;EnumerationLiterals&lt;/em&gt; consist of &lt;span&gt;name&lt;/span&gt;, &lt;span&gt;text&lt;/span&gt;, and &lt;span&gt;code&lt;/span&gt; attribute and may contain a list of &lt;em&gt;EnumerationLiterals&lt;/em&gt; themselves. Thereby, Enumerations can have an arbitrary number of recursively contained &lt;em&gt;EnumerationLiterals&lt;/em&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;pre class=&quot;prettyprint&quot;&gt;enum Profession{&lt;br /&gt;   literal Consultant text &quot;Consultant&quot; code &quot;1&quot;{&lt;br /&gt;     literal BusinessConsultant text &quot;Business Consultant&quot; code &quot;1.1&quot;&lt;br /&gt;     literal ITConsultant text &quot;IT Consultant&quot; code &quot;1.2&quot; &lt;br /&gt;     literal StrategyConsultant text &quot;Strategy Consultant&quot; code &quot;1.3&quot;&lt;br /&gt;   }&lt;br /&gt;   literal Developer text &quot;Developer&quot; code &quot;3&quot;{&lt;br /&gt;     literal Java text &quot;Java&quot; code &quot;3.1&quot;&lt;br /&gt;     literal C text &quot;C&quot; code &quot;3.2&quot;&lt;br /&gt;     literal Angular text &quot;Angular&quot; code &quot;3.3&quot;&lt;br /&gt;   }&lt;br /&gt; }&lt;/pre&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;The figure above shows an Enumeration &lt;span&gt;Profession&lt;/span&gt; that contains two &lt;em&gt;EnumerationLiterals&lt;/em&gt;, namely &lt;span&gt;Consultant &lt;/span&gt;and &lt;span&gt;Developer&lt;/span&gt;. Both contain &lt;em&gt;EnumerationLiterals&lt;/em&gt; themselves. The following sections explain how the Enumeration may be visualized.&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;&lt;br /&gt;Simple Graphical Representation&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;A simple way to represent Enumerations and their recursively contained &lt;em&gt;EnumerationLiterals&lt;/em&gt; could be done as described &lt;span&gt;&lt;a href=&quot;http://melb.enix.org/sirius/reimport/&quot;&gt;in this blog post&lt;/a&gt;&lt;/span&gt;. &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;img alt=&quot;graphical-representation-of-enumeration-dsl&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/XtextAndSirius/enum_classic.png?t=1508760439784&amp;amp;width=373&amp;amp;name=enum_classic.png&quot; style=&quot;width: 373px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;graphical-representation-of-enumeration-dsl&quot; width=&quot;373&quot; /&gt;&lt;br /&gt;&lt;br /&gt;The figure above shows the simple graphical representation of the Enumeration DSL shown above. The sample can be found in the &lt;span&gt;org.eclipse.xtext.example.domainmodel.sample&lt;/span&gt; project. Although the implementation represents the recursive containment, the &lt;em&gt;EnumerationLiteral&lt;/em&gt; attributes such as &quot;text&quot; or &quot;code&quot; are not shown in the diagram. Further, it is not possible to sort the elements based on the different attributes.&lt;/p&gt; 
&lt;h3&gt;&lt;br /&gt;Domain-specific Representation&lt;/h3&gt; 
&lt;p&gt;Sirius comes with a so called &quot;EditionTableDescription&quot; that perfectly suits the domain-specific requirements for the Enumerations and their &lt;em&gt;EnumerationLiterals&lt;/em&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;sirius-table-description&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/XtextAndSirius/enum_ds_graphic.png?t=1508760439784&amp;amp;width=320&amp;amp;name=enum_ds_graphic.png&quot; style=&quot;width: 320px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;sirius-table-description&quot; width=&quot;320&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;As implemented in &lt;span&gt;org.eclipse.xtext.example.domainmodel.design&lt;/span&gt; the tabular description holds two line definitions. One for the Enumeration itself and one for the EnumerationLiterals. By filling the &quot;Reused Sub Lines&quot; properties for the latter, a recursion is created that leads to a tree-like table representation. In addition, the specific attributes of the EnumerationLiterals are shown and can be used to sort the table.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;enumeration-table&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/XtextAndSirius/enum_ds.png?t=1508760439784&amp;amp;width=640&amp;amp;name=enum_ds.png&quot; style=&quot;width: 640px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;enumeration-table&quot; width=&quot;640&quot; /&gt;&lt;br /&gt;&lt;br /&gt;To sum it up, the table definition is the perfect match for the recursive structure of the EnumerationLiterals since it shows the tree-like structure and allows showing additional attributes of the EnumerationLiterals in each row.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;Custom shapes: Example and Representation&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;The Domainmodel has been enhanced to cope with some domain driven design concepts such as &lt;em&gt;Aggregates&lt;/em&gt;. An additional aggregate flag was introduced to the grammar to mark Entities as aggregates.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;span&gt;Entity:&lt;/span&gt;&lt;br /&gt;&lt;span&gt;'entity' (aggregate?='aggregate')? name=ValidID ('extends' superType=JvmParameterizedTypeReference)? '{'&lt;/span&gt;&lt;br /&gt;&lt;span&gt;features+=Feature*&lt;/span&gt;&lt;br /&gt;&lt;span&gt;'}';&lt;/span&gt;&lt;/pre&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;h3&gt;Simple Graphical Representation&lt;/h3&gt; 
&lt;p&gt;The aggregates and references to aggregates could be shown on a simple lines and boxes diagram. However, this would have some disadvantages.&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;img src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/XtextAndSirius/ddd_simple_graphic.png?t=1508760439784&amp;amp;width=640&amp;amp;name=ddd_simple_graphic.png&quot; style=&quot;width: 640px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;ddd_simple_graphic.png&quot; width=&quot;640&quot; /&gt;&lt;br /&gt;&lt;br /&gt;First, it would be very difficult to see which entities belong to which aggregates. Second, the aggregates have to be marked in a way that they can be differentiated from non-aggregates. Finally, for this particular diagram the attributes and their data types could be removed.&lt;br /&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;&lt;br /&gt;Domain-specific Representation&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;Instead of reusing the already existing class diagram we have seen before, the aggregates and entities will be visualized as shown in this &lt;a href=&quot;https://jaxenter.de/ddd-rest-45713&quot;&gt;presentation about domain driven APIs&lt;/a&gt;. Each aggregate is shown as a green elipse with solid lines. Each entity that is contained in such an aggregate is shown as an elipse attached to the border of the aggregate. The entity elipses are visualized with violett dashed borders.&lt;br /&gt; &lt;br /&gt;&lt;br /&gt;&lt;img alt=&quot;design-aggregate&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/HBU/XtextAndSirius/ddd_ds_graphic.png?t=1508760439784&amp;amp;width=640&amp;amp;name=ddd_ds_graphic.png&quot; style=&quot;width: 640px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;design-aggregate&quot; width=&quot;640&quot; /&gt;&lt;br /&gt; &lt;br /&gt;In summary, the domain-specific visualization shows very clearly which entity belongs to which aggregate. Further, nasty details such as attributes and their datatypes are left out to have a clear focus.&lt;br /&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;Conclusion&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;All in all, the three examples shown above give an idea of how the combination of Xtext and Sirius can be used to quickly create graphical domain-specific representation. Especially, the different diagram types and shapes are a solid ground for domain-specific visualizations. In addition, conditional shapes can be used to create user group specific representations that create a rich user experience&lt;span style=&quot;background-color: transparent;&quot;&gt;.&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a class=&quot;cta_button&quot; href=&quot;https://info.itemis.com/cs/ci/?pg=ca6e78b3-75bc-4531-9ffc-6f5b2f2be770&amp;amp;pid=761475&amp;amp;ecid=&amp;amp;hseid=&amp;amp;hsic=&quot;&gt;&lt;img alt=&quot;Learn more about Xtext in our blog&quot; class=&quot;hs-cta-img &quot; src=&quot;https://no-cache.hubspot.com/cta/default/761475/ca6e78b3-75bc-4531-9ffc-6f5b2f2be770.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fdomain-specific-visualization-of-textual-models-with-xtext-and-sirius&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sat, 21 Oct 2017 08:53:00 +0000</pubDate>
	<author>buender@itemis.de (Hendrik Bünder)</author>
</item>
<item>
	<title>Andy Clement: AspectJ 1.8.12 - Faster Spring AOP</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-4252978514266184993.post-6365094957578829373</guid>
	<link>http://andrewclement.blogspot.com/2017/10/aspectj-1812-faster-spring-aop.html</link>
	<description>&lt;p&gt;AspectJ 1.8.12 is now out. It is actually hot on the heels of 1.8.11. That previous release was really just about doing some Java 9 toleration in the 1.8 line. 1.8.12 includes some real changes that have been brewing for a while but were a bit too radical to rush into 1.8.11.  &lt;/p&gt;&lt;p&gt;The aim here is to speed up Spring AOP - or really any system that consumes AspectJ like Spring does. Instead of just using the weaver as-is, Spring uses the pointcut parser and matcher independently of the weaver (unless LTW).  Typically when used as a whole, the matching and weaving is all underpinned by type information parsed from class files.  There are alternative ways to get that type information and Spring, when consuming just the parser and matcher, actually uses a Java reflection driven system.  &lt;/p&gt;&lt;p&gt;What drove interest in doing something here is when Dave Syer from the Spring team recently created a series of benchmarks for checking the speed of Spring-AspectJ:  &lt;tt&gt;&lt;a href=&quot;https://github.com/dsyer/spring-boot-aspectj&quot;&gt;https://github.com/dsyer/spring-boot-aspectj&lt;/a&gt;&lt;/tt&gt; &lt;/p&gt;&lt;p&gt;Here is a run of those on 1.8.11 (on my macbook pro).  For this set I actually added one extra case beyond the standard benchmark (the a20_100) case:  &lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;Benchmark                 (scale)  Mode  Cnt   Score   Error  Units&lt;br /&gt;StartupBenchmark.ltw          N/A  avgt   10   2.656 ~ 0.166   s/op&lt;br /&gt;StartupBenchmark.ltw_100      N/A  avgt   10   2.618 ~ 0.063   s/op&lt;br /&gt;StartupBenchmark.spring     v0_10  avgt   10   2.071 ~ 0.044   s/op&lt;br /&gt;StartupBenchmark.spring     v1_10  avgt   10   2.210 ~ 0.058   s/op&lt;br /&gt;StartupBenchmark.spring    v1_100  avgt   10   2.260 ~ 0.068   s/op&lt;br /&gt;StartupBenchmark.spring    v10_50  avgt   10   2.933 ~ 0.039   s/op&lt;br /&gt;StartupBenchmark.spring    v20_50  avgt   10   3.832 ~ 0.094   s/op&lt;br /&gt;StartupBenchmark.spring   v20_100  avgt   10   3.959 ~ 0.047   s/op&lt;br /&gt;StartupBenchmark.spring     a0_10  avgt   10   2.073 ~ 0.028   s/op&lt;br /&gt;StartupBenchmark.spring     a1_10  avgt   10   2.729 ~ 0.061   s/op&lt;br /&gt;StartupBenchmark.spring    a1_100  avgt   10   2.750 ~ 0.029   s/op&lt;br /&gt;StartupBenchmark.spring    a10_50  avgt   10   7.153 ~ 0.075   s/op&lt;br /&gt;StartupBenchmark.spring   a10_100  avgt   10   7.152 ~ 0.059   s/op&lt;br /&gt;StartupBenchmark.spring    a20_50  avgt   10  11.430 ~ 0.105   s/op&lt;br /&gt;StartupBenchmark.spring   a20_100  avgt   10  11.497 ~ 0.162   s/op&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is the average *startup time* of an app affected by aspects applying to the beans involved.  So this is not about the impact of AOP when the system is up and running, just about the impact of parsing pointcuts and matching join points on the startup of the application.  &lt;/p&gt;&lt;p&gt;Where numbers are referenced above the first is the number of aspects/pointcuts (there is one pointcut per aspect) and the second is the number of beans.  The 'a' indicates an annotation based pointcut vs a non-annotation  based pointcut ('v'). It is pretty obvious that the performance of annotation based pointcuts is not great - it scales really badly. At 20 pointcuts and 50 beans the app is 9 seconds slower to startup! &lt;br /&gt; &lt;/p&gt;&lt;p&gt;The key change in 1.8.12 (and 1.9.0) is to recognize that it seems much more common to use annotations with runtime retention than those with just class retention, at least in most situations that I've seen (and the benchmarks here). Retrieving annotations with class retention is costly because we must open the bytes for the class file and dig around in there, as opposed to those with runtime retention which are easily accessible simply using Java reflection.  &lt;/p&gt;&lt;p&gt;Now, if you need all the annotations, we must do that digging but there are situations in matching where we know exactly the annotation we are looking for - and if we know that, we know whether it has class or runtime retention. Until now we haven't been making this distinction when looking for them and always fetching them all. In 1.8.12 we are smarter and avoid having to locate and parse the class file unless necessary. There is also some deeper work in 1.8.12 related to activating caches that were not previously being used correctly but the primary change is factoring in the annotation retention.  &lt;/p&gt;&lt;p&gt;What difference does that make?  AspectJ 1.8.12: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;Benchmark                 (scale)  Mode  Cnt  Score   Error  Units&lt;br /&gt;StartupBenchmark.ltw          N/A  avgt   10  2.620 ~ 0.130   s/op&lt;br /&gt;StartupBenchmark.ltw_100      N/A  avgt   10  2.567 ~ 0.038   s/op&lt;br /&gt;StartupBenchmark.spring     v0_10  avgt   10  2.044 ~ 0.027   s/op&lt;br /&gt;StartupBenchmark.spring     v1_10  avgt   10  2.195 ~ 0.026   s/op&lt;br /&gt;StartupBenchmark.spring    v1_100  avgt   10  2.237 ~ 0.039   s/op&lt;br /&gt;StartupBenchmark.spring    v10_50  avgt   10  2.774 ~ 0.038   s/op&lt;br /&gt;StartupBenchmark.spring    v20_50  avgt   10  3.488 ~ 0.116   s/op&lt;br /&gt;StartupBenchmark.spring   v20_100  avgt   10  3.642 ~ 0.080   s/op&lt;br /&gt;StartupBenchmark.spring     a0_10  avgt   10  2.067 ~ 0.034   s/op&lt;br /&gt;StartupBenchmark.spring     a1_10  avgt   10  2.159 ~ 0.030   s/op&lt;br /&gt;StartupBenchmark.spring    a1_100  avgt   10  2.207 ~ 0.020   s/op&lt;br /&gt;StartupBenchmark.spring    a10_50  avgt   10  2.471 ~ 0.031   s/op&lt;br /&gt;StartupBenchmark.spring   a10_100  avgt   10  2.517 ~ 0.045   s/op&lt;br /&gt;StartupBenchmark.spring    a20_50  avgt   10  2.842 ~ 0.049   s/op&lt;br /&gt;StartupBenchmark.spring   a20_100  avgt   10  2.916 ~ 0.145   s/op&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Look at the a20_100 case - instead of impacting start time by 9 seconds, it impacts it by 1 second.  &lt;/p&gt;&lt;p&gt;In fact those numbers look too good to be true... which worries me a bit! So if you are reading this and using Spring AOP, please kick the tires on this 1.8.12 release and raise any issues on our &lt;a href=&quot;https://bugs.eclipse.org/bugs/enter_bug.cgi?product=AspectJ&quot;&gt;Bugzilla&lt;/a&gt;.  &lt;/p&gt;&lt;p&gt;Barring any unexpected regressions this will be the final release of 1.8.12 and 1.9.0 is next.&lt;/p&gt;</description>
	<pubDate>Sat, 21 Oct 2017 05:02:27 +0000</pubDate>
	<author>noreply@blogger.com (Andy Clement)</author>
</item>

</channel>
</rss>
